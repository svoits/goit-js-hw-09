{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,QAASF,SAASC,cAAc,kBAChCE,OAAQH,SAASC,cAAc,iBAC/BG,SAAUJ,SAASC,cAAc,oBA0BnC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAhCbT,EAAKC,OAAOgB,iBAAiB,UAG7B,SAAsBC,GACpBA,EAAEC,iBAEF,IAAIC,EAAeC,OAAOrB,EAAKI,QAAQkB,OAEvC,IAAK,IAAIC,EAAI,EAAGA,GAAKF,OAAOrB,EAAKM,SAASgB,OAAQC,GAAK,EACrDhB,EAAcgB,EAAGH,GACdI,MAAK,EAAChB,SAAEA,EAAQC,MAAEA,MACjBX,EAAA2B,OAAOC,QAAQ,uBAAqBlB,QAAiBC,MAAU,IAEhEkB,OAAM,EAACnB,SAAEA,EAAQC,MAAEA,MAClBX,EAAA2B,OAAOG,QAAQ,sBAAoBpB,QAAeC,MAAU,IAGhEW,GAAgBC,OAAOrB,EAAKK,OAAOiB,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n// select required elements from HTML\nconst refs = {\n  formEl: document.querySelector('.form'),\n  delayEl: document.querySelector('[name=\"delay\"]'),\n  stepEl: document.querySelector('[name=\"step\"]'),\n  amountEl: document.querySelector('[name=\"amount\"]'),\n};\n\n// add event listener to the form\nrefs.formEl.addEventListener('submit', onFormSubmit);\n\n// on form submit: creates notifications and resets form\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  let delayCounter = Number(refs.delayEl.value);\n\n  for (let i = 1; i <= Number(refs.amountEl.value); i += 1) {\n    createPromise(i, delayCounter)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delayCounter += Number(refs.stepEl.value);\n  }\n}\n\n// creates promises with delay\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","formEl","document","querySelector","delayEl","stepEl","amountEl","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","delayCounter","Number","value","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.5d4877fa.js.map"}